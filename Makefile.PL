# This Makefile.PL for Task-Kensho was generated by
# inc::MakeMaker <self>
# and Dist::Zilla::Plugin::MakeMaker::Awesome 0.25.
# Don't edit it but the dist.ini and plugins used to construct it.

use strict;
use warnings;

use 5.006;
use ExtUtils::MakeMaker;

my $release_version = '0.38';

my %WriteMakefileArgs = (
  "ABSTRACT" => "A Glimpse at an Enlightened Perl",
  "AUTHOR" => "Chris Prather <chris\@prather.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0
  },
  "DISTNAME" => "Task-Kensho",
  "EXE_FILES" => [],
  "LICENSE" => "perl",
  "NAME" => "Task::Kensho",
  "PREREQ_PM" => {
    "strict" => 0,
    "warnings" => 0
  },
  "TEST_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "File::Spec" => 0,
    "Test::More" => 0
  },
  "VERSION" => "0.38",
  "test" => {
    "TESTS" => "t/*.t"
  }
);

my %FallbackPrereqs = (
  "ExtUtils::MakeMaker" => 0,
  "File::Spec" => 0,
  "Test::More" => 0,
  "strict" => 0,
  "warnings" => 0
);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.006
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Async'} = $FallbackPrereqs{'Task::Kensho::Async'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Async (Async Programming)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::CLI'} = $FallbackPrereqs{'Task::Kensho::CLI'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::CLI (Useful Command-line Tools)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Config'} = $FallbackPrereqs{'Task::Kensho::Config'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Config (Config Modules)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::DBDev'} = $FallbackPrereqs{'Task::Kensho::DBDev'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::DBDev (Database Development)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Dates'} = $FallbackPrereqs{'Task::Kensho::Dates'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Dates (Date Modules)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Email'} = $FallbackPrereqs{'Task::Kensho::Email'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Email (Email)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::ExcelCSV'} = $FallbackPrereqs{'Task::Kensho::ExcelCSV'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::ExcelCSV (Excel/CSV)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Exceptions'} = $FallbackPrereqs{'Task::Kensho::Exceptions'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Exceptions (Exception Handling)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Hackery'} = $FallbackPrereqs{'Task::Kensho::Hackery'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Hackery (Script Hackery)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Logging'} = $FallbackPrereqs{'Task::Kensho::Logging'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Logging (Logging)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::ModuleDev'} = $FallbackPrereqs{'Task::Kensho::ModuleDev'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::ModuleDev (Module Development)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::OOP'} = $FallbackPrereqs{'Task::Kensho::OOP'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::OOP (Object Oriented Programming)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Scalability'} = $FallbackPrereqs{'Task::Kensho::Scalability'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Scalability (Scalability)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Testing'} = $FallbackPrereqs{'Task::Kensho::Testing'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Testing (Testing)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::Toolchain'} = $FallbackPrereqs{'Task::Kensho::Toolchain'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::Toolchain (Basic Toolchain)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::WebCrawling'} = $FallbackPrereqs{'Task::Kensho::WebCrawling'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::WebCrawling (Web Crawling)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::WebDev'} = $FallbackPrereqs{'Task::Kensho::WebDev'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::WebDev (Web Development)? [Y/n]", 'Y') =~ /^y/i;
$WriteMakefileArgs{PREREQ_PM}{'Task::Kensho::XML'} = $FallbackPrereqs{'Task::Kensho::XML'} = $release_version
if $ENV{PERL_MM_USE_DEFAULT} or prompt("install Task::Kensho::XML (XML Development)? [Y/n]", 'Y') =~ /^y/i;


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);
