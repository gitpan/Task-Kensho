.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Task::Kensho 3"
.TH Task::Kensho 3 "2008-09-28" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Task::Kensho \- A Glimpse at an Enlightened Perl
.SH "VERSION"
.IX Header "VERSION"
This document describes Task::Kensho version 0.0.1
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    > cpan Task::Kensho
.Ve
.SH "DESCRIPTION,"
.IX Header "DESCRIPTION,"
From <http://en.wikipedia.org/wiki/Kensho>:
.PP
.Vb 4
\&    KenshX (XX) (C. Wu) is a Japanese term for enlightenment experiencesXmost
\&    commonly used within the confines of Zen BuddhismXliterally meaning
\&    "seeing one's nature"[1] or "true self."[2] It generally "refers to the
\&    realization of nonduality of subject and object."[3]
.Ve
.PP
Task::Kensho is a first cut at building a list of reccomended modules for
Enlightened Perl development. \s-1CPAN\s0 is wonderful, but there are too many wheels
and you have to pick and choose amongst the various competing technologies.
.PP
The plan is for Task::Kensho to eventually morph into an actual perl 
distribution.
.PP
The modules that are bundled by Task::Kensho are broken down into several 
categories and are still being considered. They are all taken from various 
top 100 most used perl modules lists.
.Sh "Basic Toolchain"
.IX Subsection "Basic Toolchain"
.IP "Bundle::CPAN" 4
.IX Item "Bundle::CPAN"
Bundle to optimize the behaviour of \s-1CPAN\s0.pm
.IP "local::lib" 4
.IX Item "local::lib"
Create and use a local lib/ for perl modules with \s-1PERL5LIB\s0
.IP "version" 4
.IX Item "version"
Perl extension for Version Objects
.Sh "Testing"
.IX Subsection "Testing"
.IP "Test::Simple" 4
.IX Item "Test::Simple"
Basic utilities for writing tests.
.IP "Test::Exception" 4
.IX Item "Test::Exception"
Test exception based code
.IP "Test::Pod" 4
.IX Item "Test::Pod"
Check for \s-1POD\s0 errors in files
.IP "Test::Pod::Coverage" 4
.IX Item "Test::Pod::Coverage"
Check for pod coverage in your distribution.
.IP "Test::Memory::Cycle" 4
.IX Item "Test::Memory::Cycle"
Check for memory leaks and circular memory references
.Sh "Object Oriented Programming"
.IX Subsection "Object Oriented Programming"
.IP "Moose" 4
.IX Item "Moose"
A postmodern object system for Perl 5
.IP "Moose::Autobox" 4
.IX Item "Moose::Autobox"
Autoboxed wrappers for Native Perl datatypes
.IP "MooseX::AttributeHelpers" 4
.IX Item "MooseX::AttributeHelpers"
Extend your attribute interfaces
.IP "MooseX::Storage" 4
.IX Item "MooseX::Storage"
An serialization framework for Moose classes
.IP "MooseX::Getopt" 4
.IX Item "MooseX::Getopt"
A Moose role for processing command line options
.IP "namespace::clean" 4
.IX Item "namespace::clean"
Keep imports and functions out of your namespace
.Sh "Asynchronous Programming"
.IX Subsection "Asynchronous Programming"
.IP "\s-1POE\s0" 4
.IX Item "POE"
portable multitasking and networking framework for Perl
.Sh "Web Development"
.IX Subsection "Web Development"
.IP "Catalyst" 4
.IX Item "Catalyst"
The Elegant \s-1MVC\s0 Web Application Framework
.IP "Catalyst::View::TT" 4
.IX Item "Catalyst::View::TT"
Template View Class
.IP "Catalyst::Model::DBIC::Schema" 4
.IX Item "Catalyst::Model::DBIC::Schema"
DBIx::Class::Schema Model Class
.IP "Catalyst::Devel" 4
.IX Item "Catalyst::Devel"
Catalyst Development Tools
.IP "Catalyst::Plugin::Session" 4
.IX Item "Catalyst::Plugin::Session"
Generic Session plugin \- ties together server side storage and client side
state required to maintain session data.
.IP "Catalyst::Plugin::Authentication" 4
.IX Item "Catalyst::Plugin::Authentication"
Infrastructure plugin for the Catalyst authentication framework
.IP "Catalyst::Plugin::StackTrace" 4
.IX Item "Catalyst::Plugin::StackTrace"
Display a stack trace on the debug screen
.Sh "Database Development"
.IX Subsection "Database Development"
.IP "\s-1DBI\s0" 4
.IX Item "DBI"
Database independent interface for Perl
.IP "DBD::SQLite" 4
.IX Item "DBD::SQLite"
Self Contained \s-1RDBMS\s0 in a \s-1DBI\s0 Driver
.IP "DBIx::Class" 4
.IX Item "DBIx::Class"
Extensible and flexible object <\-> relational mapper.
.IP "DBIx::Class::Schema::Loader" 4
.IX Item "DBIx::Class::Schema::Loader"
Dynamic definition of a DBIx::Class::Schema
.IP "SQL::Translator" 4
.IX Item "SQL::Translator"
Manipulate structured data definitions (\s-1SQL\s0 and more)
.Sh "Web Crawling"
.IX Subsection "Web Crawling"
.IP "Bundle::LWP" 4
.IX Item "Bundle::LWP"
Install all libwww-perl related modules
.IP "LWP::Simple" 4
.IX Item "LWP::Simple"
Simple procedural interface to \s-1LWP\s0
.IP "WWW::Mechanize" 4
.IX Item "WWW::Mechanize"
Handy web browsing in a Perl object
.Sh "Module Development"
.IX Subsection "Module Development"
.IP "Module::Starter" 4
.IX Item "Module::Starter"
A simple starter kit for any module
.IP "Module::Install" 4
.IX Item "Module::Install"
Standalone, extensible Perl module installer
.IP "Devel::NYTProf" 4
.IX Item "Devel::NYTProf"
Powerful feature-rich perl source code profiler
.IP "Perl::Tidy" 4
.IX Item "Perl::Tidy"
Parses and beautifies perl source
.Sh "Date Modules"
.IX Subsection "Date Modules"
.IP "DateTime" 4
.IX Item "DateTime"
A date and time object
.IP "Date::Tiny" 4
.IX Item "Date::Tiny"
A date object with as little code as possible
.IP "Time::ParseDate" 4
.IX Item "Time::ParseDate"
Date parsing both relative and absolute
.Sh "Config Modules"
.IX Subsection "Config Modules"
.IP "Config::Any" 4
.IX Item "Config::Any"
Load configuration from different file formats, transparently
.IP "Config::General" 4
.IX Item "Config::General"
Generic Config Module
.Sh "Useful Command-line Tools"
.IX Subsection "Useful Command-line Tools"
.IP "App::Ack" 4
.IX Item "App::Ack"
A grep-like text finder
.IP "App::Nopaste" 4
.IX Item "App::Nopaste"
Easy access to any pastebin
.IP "Devel::REPL" 4
.IX Item "Devel::REPL"
A modern perl interactive shell
.IP "Module::Corelist" 4
.IX Item "Module::Corelist"
What modules shipped with versions of perl
.Sh "Script Hackery"
.IX Subsection "Script Hackery"
.IP "Smart::Comments" 4
.IX Item "Smart::Comments"
Comments that do more than just sit there
.IP "IO::All" 4
.IX Item "IO::All"
IO::All combines all of the best Perl \s-1IO\s0 modules into a single nifty object
oriented interface to greatly simplify your everyday Perl \s-1IO\s0 idioms.
.IP "\s-1XXX\s0" 4
.IX Item "XXX"
\&\s-1XXX\s0.pm exports a function called \s-1XXX\s0 that you can put just about anywhere in
your Perl code to make it die with a \s-1YAML\s0 dump of the arguments to its right.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
This list is by no means comprehensive of the \*(L"Good\*(R" Modules on \s-1CPAN\s0. Nor is 
this neccessarily the correct path for all developers. Each of these modules
has a perfectly acceptable replacement that may work better for you. This 
is however a path to good perl practicies, and a starting 
place on the road to Enlightened Perl programming.
.PP
No bugs have been reported.
.PP
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-task\-kensho@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<http://www.enlightenedperl.org/>, Perl::Dist::Strawberry, <http://gitorious.org/projects/task\-kensho>
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Prather  \f(CW\*(C`<perigrin@cpan.org>\*(C'\fR
.SH "LICENCE AND COPYRIGHT"
.IX Header "LICENCE AND COPYRIGHT"
Copyright (c) 2008, Chris Prather \f(CW\*(C`<perigrin@cpan.org>\*(C'\fR. Some rights reserved.
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See perlartistic.
